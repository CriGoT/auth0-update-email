html
  head
    meta(charset='UTF-8')
    meta(http-equiv='X-UA-Compatible', content='IE=Edge')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    meta(name='description', content='#{description}')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='shortcut icon', href='https://cdn.auth0.com/styleguide/2.0.1/lib/logos/img/favicon.png')
    link(rel='apple-touch-icon', href='apple-touch-icon.png')

    link(rel='stylesheet', type='text/css', href="https://cdn.auth0.com/styleguide/latest/index.css")

    script(type='text/javascript', src='https://code.jquery.com/jquery-2.1.4.min.js')
    script(type='text/javascript', src='https://fb.me/react-0.14.0.min.js')
    script(type='text/javascript', src='https://fb.me/react-dom-0.14.0.js')
    script(type='text/javascript', src='https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.23/browser.min.js')
    script(type='text/javascript', src='https://cdn.auth0.com/js/jwt-decode-1.4.0.min.js')
    script(type='text/javascript', src='https://cdn.auth0.com/js/navbar-1.0.1.min.js')
    script(type='text/javascript', src='https://cdn.auth0.com/auth0/auth0-2.1.0.min.js')
    script(type='text/javascript', src='https://cdn.auth0.com/js/lock-9.0.min.js')

  body
    header.dashboard-header
      nav.navbar.navbar-default(role='navigation')
        .container
          .navbar-header
            i.icon-budicon-781.icon.navbar-brand(aria-hidden="true",style="font-size:40px")
            span.navbar-link(style="font-size:30px") E-Mail Update

    .container.root-container
      .row
        #content.wrapper.col-xs-10

    script(type='text/babel').
      var Spinner = React.createClass({
        render: function(){
          return <div className="spinner spinner-md is-auth0 center-block"><div className="circle"></div></div>
        }
      });

      var Result = React.createClass({
        render:function(){
          return <div className={'alert alert-' + this.props.type}><p>{this.props.text}</p><strong>For your security close the browser</strong></div>;
        }
      });

      var Button = React.createClass({
        render : function(){
           return (
             <button onClick={this.props.click} className={'btn btn-lg btn-' + this.props.type + ' center-block'} disabled={this.props.disabled}><span className={'btn-icon icon-budicon-' + this.props.icon}> </span>{this.props.text}</button>
           );
        }
      });

      var Home = React.createClass({
        showLock: function() {
          this.props.lock.showSignin({closable:false,rememberLastLogin:false,connections:[this.props.connection],container:'auth0-lock',authParams:{scope:'openid email name nickname'}});
        },

        componentDidMount:function() {
          this.showLock();
        },

        render: function() {
          return (
            <div className="col-xs-6 col-xs-offset-4">
              <div id='auth0-lock'></div>
            </div>
          );
        }
      });

      var timer;
      var LoggedIn = React.createClass({
        isValidMail : function(value){
          var regExp = /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i;
          return regExp.test(value || this.state.new_mail)
        },

        updateState: function(newState){
          this.setState($.extend({},this.state,newState));
        },

        mailChanged : function(new_mail){
          new_mail= new_mail || this.state.new_mail;
          return this.props.profile.email !== new_mail && new_mail && new_mail!=='';
        },

        getInitialState: function() {
          return {
            new_mail: this.props.profile.email,
            is_available: false,
            working: false,
            result: null
          }
        },

        setResult : function (type,message) {
            this.updateState({working: false, result: {type: type, message: message}});
            window.location.replace('#');
        },

        callApi: function(method,path,data,done,fail){
          this.updateState({working: true});
          $.ajax({
            method: method,
            url: this.props.apiUrl + '/' + path,
            data: data,
            dataType: 'json',
            contentType: 'application/json',
            cache: false})
          .then(done,fail);
        },

        updateEmail: function() {
          this.callApi('PATCH','me',JSON.stringify({email:this.state.new_mail}),
            result=> this.setResult('success',result.message),
            err =>{
              console.log('Error updating e-mail',err);
              this.setResult('danger',err.description)
          });
        },

        checkAvailability: function(){
           if (this.mailChanged() && this.isValidMail()){
             var state = this.state;
             this.callApi('GET','isavailable',{m:state.new_mail},
              result=>{
                if (state.new_mail===this.state.new_mail)
                  this.updateState({is_available: result, working: false});
              },
              err =>{
                console.log(err);
                this.updateState({is_available: false, working: false});
              });
           }
        },

        onMailChange: function(event) {
          window.clearTimeout(timer);
          this.updateState({new_mail: event.target.value,is_available: false,working: this.mailChanged(event.target.value) && this.isValidMail(event.target.value) });
          timer = window.setTimeout(this.checkAvailability,350);
        },

        renderForm : function() {
          return (
            <form className="form-horizontal">
              <div className="form-group">
                <label className="col-xs-3 control-label">Current E-Mail</label>
                <div className="col-xs-6">
                  <input type="text" required readOnly className="form-control" value={this.props.profile.email} />
                </div>
              </div>
              <div className="form-group">
                <label className="col-xs-3 control-label">New E-Mail</label>
                <div className="col-xs-6">
                  <input type="text" onChange={this.onMailChange} className="form-control" readOnly={this.state.result || this.state.error || (this.state.is_available && this.state.working)} value={this.state.new_mail} />
                </div>
              </div>
            </form>);
        },

        renderAction: function() {
          if (this.state.result)
            return <Result type={this.state.result.type} text={this.state.result.message} />;

          if (this.state.working)
            return <Spinner />;

          if (!this.isValidMail())
            return <Button type="warning" icon='780' text='Invalid E-mail address' />;

          if (this.mailChanged() && !this.state.is_available)
             return <Button type="danger" icon='782' text='E-mail address already in use' />;

          return <Button click={this.updateEmail} disabled={!this.mailChanged()} type="primary" icon='781' text='Update E-mail' />;
        },

        render: function() {
          if (this.props.profile) {
            return (
              <div>
                <h2>Welcome {this.props.profile.name || this.props.profile.nickname || this.props.profile.email}</h2>
                {this.renderForm()}
                {this.renderAction()}
              </div>);
          } else {
            return (
                <div className="alert alert-danger">There was an error retrieving your information. Please, try again later or contact your administrator.</div>
              );
          }
        }
      });
      var App = React.createClass({
          componentWillMount: function() {
            this.createLock();
            this.setupAjax();
            this.setState(this.getState())
          },

          createLock: function() {
            this.lock = new Auth0Lock(this.props.clientId, this.props.domain);
          },

          setupAjax: function() {
            var profile = this.getState() || {};
            if (profile.id_token)
            {
              $.ajaxSetup({
                'beforeSend': function(xhr) {
                    xhr.setRequestHeader('Authorization',
                          'Bearer ' + profile.id_token);
                }
              });
            }
          },

          getState: function() {
            var state;
            var authHash = this.lock.parseHash(window.location.hash);
            if (authHash) {
              if (authHash.error) {
                console.log("Error signing in", authHash);
              } else{
                state = authHash;
              }
            }
            return state;
          },

          render: function() {
            if (this.state.profile)
              return <LoggedIn lock={this.lock} profile={this.state.profile} {...this.props} />;
            else
              return <Home lock={this.lock} {...this.props} />;
          }
        });
      var AUTH0_DOMAIN='#{config.AUTH0_DOMAIN}';
      var AUTH0_CLIENT_ID='#{config.AUTH0_CLIENT_ID}';
      var apiUrl = '#{baseUrl}/api';
      var AUTH0_CONNECTION = '#{config.AUTH0_CONNECTION}'
      ReactDOM.render(
        <App clientId={AUTH0_CLIENT_ID} domain={AUTH0_DOMAIN} apiUrl={apiUrl} connection={AUTH0_CONNECTION}/>,
        document.getElementById('content')
      );
